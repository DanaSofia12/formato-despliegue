services:

# ? Servicio de DB postgres
  pgsql:
    image: postgres:latest
    container_name: pgsql
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - laravel-network
    volumes:
      - pgsql_data:/var/lib/postgresql/data

# ? Servicio de pgadmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS}
    ports:
      - "5050:80"
    networks:
      - laravel-network
    depends_on:
      - pgsql

# ? Servicio de Servidor de mongo
  mongo-server:
    image: mongo:latest
    container_name: mongo-server
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - mongodb_network

# ? Servicio de cliente de mongo
  mongo-client:
    image: mongo-express:latest
    container_name: mongo-client
    restart: always
    depends_on:
      - mongo-server
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-server
      - ME_CONFIG_MONGODB_PORT=27017
    ports:
      - "8081:8081"
    networks:
      - mongodb_network
# ? Servicio de Mosquitto
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    environment:
      - TZ=Europe/Madrid
    volumes:
      - mosquitto_config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001
    restart: unless-stopped

# ? Servicio de autentificaci√≥n
  auth:
    build:
      args:
        user: "${USER}"
      context: ./back-autentificacion/
      dockerfile: Dockerfile.dev
    ports:
      - "8003:8000"
    volumes:
      - ./back-autentificacion/:/home/app
    depends_on:
      - pgsql

# ? Servicio de formato implementacion
  formato-implementacion:
    build:
      args:
        user: "${USER}"
      context: ./back-formato-implementacion/
      dockerfile: Dockerfile.dev
    ports:
      - "8008:8000"
    volumes:
      - ./back-formato-implementacion/:/home/app

# ? Servicio de notificaciones
  notificaciones:
    build:
      args:
        user: "${USER}"
      context: ./back-notificaciones/
      dockerfile: Dockerfile.dev
    ports:
      - "8009:8000"
    volumes:
      - ./back-notificaciones/:/home/app

# ? Servicio del FRONT
  angular-app:
    build:
      args:
        user: "${USER}"
      context: ./front-proyecto/
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./front-proyecto/:/home/app

networks:
  laravel-network:
  mongodb_network:

volumes:
  pgsql_data:
  mosquitto_config:
  mosquitto_data:
  mosquitto_log:
  mongodb_data:
